name: PHP Lint

on:
  workflow_call:
    inputs:
      php-version:
        type: string
      os:
        type: string

jobs:
  static-analysis:
    name: Static analysis for version ${{ matrix.php-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ${{ fromJson(inputs.php-version) }}
        os: ${{ fromJson(inputs.os) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '1'

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: parallel-lint, phpcs

      - name: Set up dependencies
        run: |
          git clone --depth 1 https://github.com/Icinga/icingaweb2.git vendor/icingaweb2
          git clone --depth 1 -b snapshot/nightly https://github.com/Icinga/icinga-php-library.git vendor/icinga-php-library
          git clone --depth 1 -b snapshot/nightly https://github.com/Icinga/icinga-php-thirdparty.git vendor/icinga-php-thirdparty

      - name: Install composer
        if: hashFiles('composer.json') != ''
        run: |
          if [ -f composer.json ]; then
            composer install --no-progress --prefer-dist
          fi

      - name: Lint
        run: parallel-lint --exclude vendor .

      - name: Create phpcs.xml
        if: hashFiles('.phpcs.xml') == ''
        run: |
          cat <<'EOF' >phpcs.xml
          <?xml version="1.0"?>
          <ruleset name="PSR12">
              <!-- Test all PHP files except those in vendor/ -->
              <file>./</file>
              <arg name="extensions" value="php"/>
              <exclude-pattern>vendor/*</exclude-pattern>
          
              <arg name="report-width" value="auto"/>
              <arg name="report-full"/>
              <arg name="report-gitblame"/>
              <arg name="report-summary"/>
              <arg name="encoding" value="UTF-8"/>
          
              <rule ref="PSR12"/>
          </ruleset>
          EOF

      - name: Check Code Style
        run: |
          phpcs -wps --colors
